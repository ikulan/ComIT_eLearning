@model ComIT_eLearning.Areas.Admin.Models.ProfileDetailPartialViewModel

<!-- #region Management Card-->
<div class="card">
  <div class="card-header">
    <div class="card-head-row card-tools-still-right">
      <h3 class="card-title">Account Management</h3>
    </div>
  </div>
  <div class="card-body">

    <div class="row align-items-center">
      <div class="col-2">
        <p class="card-text"><b>Account Status:</b></p>
      </div>
      <div class="col-10">@Html.DisplayFor(model => model.User.AccountStatus, "AccountStatus")</div>
    </div>

@if(!Model.User.IsActive)
{
  <div class="ms-4 mt-2">
      <div class="row align-items-center">
        <div class="col-2">
          <p class="card-text">Invitation Expiry:</p>
        </div>
        <div class="col-10">
        @if (Model.User.InvitationExpiry.HasValue)
        {
          <p class="card-text">@Model.User.InvitationExpiry.Value.ToLocalTime().ToString("yyyy-MM-dd HH:mm")</p>
        }
        else
        {
          <p class="card-text text-muted">Not set</p>
        }
        </div>
      
        <div class="col-2">
          <p class="card-text">Invitation Link:</p>
        </div>
        <div class="col-10">
          @if (ViewBag.RegistrationUrl != null)
          {
            <div class="input-group mb-2 pe-4">
              <input type="text"
                class="form-control"
                value="@ViewBag.RegistrationUrl"
                readonly
                id="registrationLink" />
              <button class="btn btn-secondary btn-border"
                type="button"
                onclick="navigator.clipboard.writeText(document.getElementById('registrationLink').value)">
                Copy
              </button>
            </div>

          }
        </div>
      
      <div class="col mt-2">
        <button
          type="button"
          class="btn btn-secondary btn-border"
          data-bs-toggle="modal"
          data-bs-target="#renew-invitation"
        >
          Renew Invitation Link
        </button>
        @await Html.PartialAsync("_ConfirmModal", new ConfirmModalViewModel
        {
            ModalId = "renew-invitation",
            Title = "Renew Invitation Link",
            Body = "Regenerate the invitation link and extend its expiration by 7 days? The current link will become invalid.",
            ConfirmLink = Url.Action("RegenerateInvitation", new { userId = @Model.UserId})
        })

      </div>
      </div>
      
  </div>
}      

    <p class="card-text mt-3"><b>Account Actions:</b></p>
    <div class="d-flex gap-3 ms-4">
      <div>
        <button
        type="button"
        class="btn btn-secondary btn-border"
        data-bs-toggle="modal"
        data-bs-target="#deactivate"
      >
        Deactivate Account
      </button>
      @await Html.PartialAsync("_ConfirmModal", new ConfirmModalViewModel
      {
          ModalId = "deactivate",
          Title = "Deactivate Account",
          Body = $"Are you sure to deactivate this account?<br><b>{@Model.User.GetFullName()} ({@Model.IdNumber})</b>",
          ConfirmLink = Url.Action("Deactivate", new { userId = @Model.UserId})
      })
      </div>
      <!-- TODO: Reset Password -->
      @* <div>
        <a asp-action="Edit" asp-route-userId="@Model?.UserId" class="btn btn-secondary btn-border">
          Reset Password
        </a>
      </div> *@
  </div>

</div>
<!-- #endofregion Management Card-->

<!-- #region Courses Card-->
<div id="courses-section" class="card">
  <div class="card-header">
    <div class="card-head-row card-tools-still-right">
      <h3 class="card-title">Courses</h3>
      <div class="card-tools">
        <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#coursesModal">
          Add Courses
        </button>
        @await Html.PartialAsync("_AddCourseModal")
      </div>
    </div>
  </div>
  <div class="card-body">
    @await Html.PartialAsync("_CourseListPartial", new CourseListViewModel{
    CourseList = Model.EnrolledCourses.ToList(),
        EmptyMessage = "No enrolled courses.",
        showStatus = true,
        showRemoveButton = true
        })

    @await Html.PartialAsync("_ConfirmModal", new ConfirmModalViewModel
        {
      ModalId = "remove-course-confirm",
        Title = "Remove from Course",
        Body = "",
        ConfirmLink = ""
        })
  </div>
</div> 
<!-- #endofregion Courses Card-->
